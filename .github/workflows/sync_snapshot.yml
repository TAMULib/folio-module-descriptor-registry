name: Synchronize Snapshot
run-name: Synchronize Snapshot using script branch ${{ inputs.script_branch }} and registry branch ${{ inputs.registry_branch }} by @${{ github.actor }}

on:
  schedule:
    - cron: '0 0 */1 * *'

  workflow_call:
    inputs:
      script_branch:
        description: 'Branch name to checkout scripts from.'
        required: true
        type: string
        default: 'master'
      registry_branch:
        description: 'Branch name to checkout the registry from.'
        required: true
        type: string
        default: 'snapshot'

  workflow_dispatch:
    inputs:
      script_branch:
        description: 'Branch name to checkout scripts from.'
        required: true
        type: string
        default: 'master'
      registry_branch:
        description: 'Branch name to checkout the registry from.'
        required: true
        type: string
        default: 'snapshot'

jobs:
  synchronize_snapshot:
    name: Update Registry

    permissions:
      contents: write # To push the changes.

    outputs:
      sync_result: ${{ steps.synchronize_snapshot.outputs.sync_result }}

    runs-on: self-hosted
    steps:
      - id: create_dirs
        name: Clean and Create Working Directories
        run: |
          rm -Rf populate scripts
          mkdir populate scripts
      - id: checkout_scripts
        name: Checkout Scripts
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.script_branch }}
          path: scripts
          sparse-checkout: |
            script/populate_release.sh
            script/sync_snapshot.sh
      - id: checkout_registry
        name: Checkout Registry
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.registry_branch }}
          path: populate
      - id: populate_snapshot
        name: Populate Snapshot
        working-directory: populate
        run: |
          bash ../scripts/script/populate_release.sh
      - id: build_latest
        name: Build Latest Version Links
        working-directory: populate
        run: |
          BUILD_LATEST_IGNORE=setting/ignore.txt BUILD_LATEST_PATH=release/snapshot bash ../scripts/script/build_latest.sh
      - id: synchronize_snapshot
        name: Synchronize Snapshot
        working-directory: populate
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          SYNC_SNAPSHOT_RESULT="results.txt" bash ../scripts/script/sync_snapshot.sh
          echo "sync_result=$(cat results.txt)" >> "${GITHUB_OUTPUT}"

  build_github_pages_workflow:
    name: Build Github Pages Workflow
    needs: synchronize_snapshot
    if: needs.synchronize_snapshot.outputs.sync_result == 'updates'
    uses: ./.github/workflows/gh_pages.yml
    with:
      registry_branch: ${{ inputs.registry_branch }}
